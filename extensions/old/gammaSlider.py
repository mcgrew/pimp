import wx
import string


class scaleDialog( wx.Dialog ):
    """
    A class for getting input values from the user for the scale filter
    """
    def __init__( self, parent=None, id=-1, okFunction = None, title="Scaling Image", defaultWidth=1024, defaultHeight=768 ):
        """
        Initializes the dialog box.

        :Parameters:
            parent : wx.Frame
                The parent of this dialog. Defaults to None.
            id : int
                The id of this dialog. Defaults to -1
            okFunction : function
                An optional additional function to be called when the OK button is pressed. Defaults to None
            sliderUpdateFunction : function
                An an optional additional function to be called when one of the sliders is changed. Defaults to None.
            title : String
                The title of the dialog box to be displayed in the titlebar. Defaults to "Nintendize Options".
            maxResolution : int
                The maximim value to be available on the resolution slider. Defaults to 500.
        """
        wx.Dialog.__init__( self, None, -1, title, wx.DefaultPosition, ( 240, 110 ) )

        
        self.widthEntry  = wx.TextCtrl( self, -1, value = str( defaultWidth ),  pos = ( 70, 30 ), size = ( 100, 20 ) )
        self.heightEntry = wx.TextCtrl( self, -1, value = str( defaultHeight ), pos = ( 70, 50 ), size = ( 100, 20 ) )
        self.widthEntry.SetMaxLength(  5 )
        self.heightEntry.SetMaxLength( 5 )

        self.displayPanel   = wx.Panel( self, -1, pos = ( 180, 10 ), size = ( 50, 60 ) )
        self.headingDisplay = wx.StaticText( self.displayPanel, pos = ( 0,  0 ), label="Original Size" )
        self.widthDisplay   = wx.StaticText( self.displayPanel, pos = ( 0, 20 ), label=str( defaultWidth  ) )
        self.heightDisplay  = wx.StaticText( self.displayPanel, pos = ( 0, 40 ), label=str( defaultHeight ) )

        self.labelPanel = wx.Panel( self, -1, pos = ( 10, 30 ), size = ( 50, 40 ) )
        self.widthLabel = wx.StaticText( self.labelPanel, pos = ( 0,  0 ), label=" Width" )
        self.heightLabel   = wx.StaticText( self.labelPanel, pos = ( 0, 20 ), label="Height" )

        self.isOk = False
        okButton     = wx.Button( self, id = wx.ID_OK,     pos = (  10, 70 ), size = ( 80, 30 ) )
        cancelButton = wx.Button( self, id = wx.ID_CANCEL, pos = ( 110, 70 ), size = ( 80, 30 ) )

        if okFunction:
            self.okFunction = okFunction
        elif ( "onOk" in dir( self ) ):
            self.okFunction = self.onOk
        else:
            self.okFunction = lambda x,y: None

        self.widthEntry.Bind(  wx.EVT_CHAR, self.validate )
        self.heightEntry.Bind( wx.EVT_CHAR, self.validate )
        #self.Bind( wx.EVT_TEXT, self. )
        self.Bind( wx.EVT_CLOSE, self.cancel )
        okButton.Bind( wx.EVT_BUTTON, self.ok )
        cancelButton.Bind( wx.EVT_BUTTON, self.cancel )

    def validate( self, event=None ):
        keyCode = event.GetKeyCode( )
        print keyCode
        if not keyCode in ( 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, wx.WXK_BACK, wx.WXK_DELETE, wx.WXK_LEFT, wx.WXK_RIGHT, wx.WXK_HOME, wx.WXK_END ):
            return
        event.Skip( )
    
    def cancel( self, event=None ):
        """
        Internal function. Called when the "Cancel" button is pressed.

        :Parameters:
            event : wx.Event
                Event generated by clicking a button. The argument is ignored.
        """
        self.Destroy( )

    def ok( self, event=None ):
        """
        Internal function. Called when the "OK" button is pressed

        :Parameters:
            event : wx.Event
                Event generated by clicking a button. The argument is ignored.
        """
        self.okFunction( int( self.widthEntry.GetValue( ) ), int( self.heightEntry.GetValue( ) ) )
        self.isOk = True
        self.Destroy( )

    def ShowModal( self ):
        """
        Displays the dialog window and waits for the user to click OK or Cancel to return a value.

        :rtype: tuple or boolean
        :returns: The values for resolution and color level in a tuple if OK is clicked. Returns False otherwise.
        """
        wx.Dialog.ShowModal( self )
        if self.isOk:
            return ( int( self.widthEntry.GetValue( ) ), int( self.heightEntry.GetValue( ) ) )
        return False


#def p(x,y,z):
    #pass
#def q(x,y,z):
    #print( x, y, z )
    #pass

class MyFrame(wx.Frame):
    def __init__(self, parent, id, title):
        wx.Frame.__init__(self, parent, id, title, size=(300,250))

        panel = wx.Panel(self, -1)
        wx.Button(panel, 1, 'Show Custom Dialog', (50, 50), (200, 150) )
        self.Bind (wx.EVT_BUTTON, self.OnShowCustomDialog, id=1)

    def OnShowCustomDialog(self, event):
        dia = scaleDialog( )
        returnvalue = dia.ShowModal()
        print returnvalue
        dia.Destroy()

class MyApp(wx.App):
    def OnInit(self):
        frame = MyFrame(None, -1, 'customdialog1.py')
        frame.Show(True)
        frame.Centre()
        return True
    
blah = MyApp( )



blah.MainLoop( )